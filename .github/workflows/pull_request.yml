name: Build and Analyze Project
on:
  pull_request:
    types:
      - opened

jobs:
  build_and_analyze:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install @actions/github
        run: npm install @actions/github

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
      - name: Change Permission
        run: |
           chmod +x gradlew
      - name: Build with Gradle
        uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
        with:
          arguments: build
      
      - name: Build Docker Image
        run: docker build -f src/main/docker/Dockerfile.jvm -t myapp:${{ github.sha }} .

      - name: Install Trivy
        run: |
          wget https://github.com/aquasecurity/trivy/releases/latest/download/trivy_0.42.0_Linux-64bit.tar.gz
          tar zxvf trivy_0.42.0_Linux-64bit.tar.gz
          ls
          sudo mv trivy /usr/local/bin/

      - name: Scan Docker Image with Trivy
        run: trivy image myapp:${{ github.sha }} --format json > trivy_report.json

      - name: Upload Trivy Report as Comment
        run: |
          report=$(cat trivy_report.json)
          echo "### Trivy Vulnerability Report\n\n$report" > comment.md
          echo "::set-output name=comment_path::comment.md"
        id: upload_comment

      - name: Create Comment on Pull Request
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const { github } = require('@actions/github');
            const commentPath = ${{ steps.upload_comment.outputs.comment_path }};
            const comment = fs.readFileSync(commentPath, 'utf8');
            const octokit = github.getOctokit(process.env.GITHUB_TOKEN);
            octokit.rest.pulls.createReview({
              owner: github.context.repo.owner,
              repo: github.context.repo.repo,
              pull_number: github.context.payload.pull_request.number,
              body: comment,
              event: 'COMMENT'
            });
