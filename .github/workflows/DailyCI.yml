name: CI
on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Run Test and Coverage
        run: ./gradlew quarkusBuild test jacocoTestReport

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: artifacts
          path: .


  unittest_scan:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: artifacts
      - name: Convert UNITTEST to Markdown
        id: unittestmd
        run: |
          pip install BeautifulSoup4
          python3 .github/workflows/json2markdown.py UNITTEST
          echo 'UNITTESTMD_OUTPUT<<EOF' >> $GITHUB_OUTPUT
          echo "$(cat report_UNITTEST.md)" >> $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT          

      - name: Comment PR with UNITTEST results
        uses: thollander/actions-comment-pull-request@v2
        with:
          message: |
            ### Test Summary Report 
            ${{ steps.unittestmd.outputs.UNITTESTMD_OUTPUT }}


  jacoco_coverage_scan:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: artifacts
      - name: Jacoco Report to PR
        id: jacoco
        uses: madrapps/jacoco-report@v1.4
        with:
          paths: ./build/reports/jacoco/test/jacocoTestReport.xml
          token: ${{ secrets.GITHUB_TOKEN }}
          min-coverage-overall: 80
          min-coverage-changed-files: 80
          title: '[Code Coverage Report ${{ github.repository }}](https:///www.google.com)'
          debug-mode: false

      - name: Generate JaCoCo badge
        id: jacocoBadge
        uses: cicirello/jacoco-badge-generator@v2
        with:
          jacoco-csv-file: ./build/reports/jacoco/test/jacocoTestReport.csv
          badges-directory: .github/badges
          generate-branches-badge: false
          generate-summary: false
          colors: '#39C609 #a4a61d #EC2F0B'
          intervals: 100 80 0
          on-missing-report: fail
          fail-if-coverage-less-than: 0
          fail-if-branches-less-than: 0
          fail-on-coverage-decrease: false
          fail-on-branches-decrease: false

      - name: Commit and push the coverage badges and summary file
        if: ${{ github.event_name != 'pull_request' }}
        run: |
          cd .github/badges
          if [[ `git status --porcelain *.svg` ]]; then
            git config --global user.name 'github-actions'
            git config --global user.email '41898282+github-actions[bot]@users.noreply.github.com'
            git add *.svg
            git commit -m "Autogenerated JaCoCo coverage badges" *.svg
            git push
          fi
 

  trivy_vulnerabilities_scan:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: artifacts
      - name: Build Docker Image
        run: docker build -f src/main/docker/Dockerfile.jvm -t ${{ github.repository }}:${{ github.sha }} .
      - name: Install Trivy
        run: |
          wget https://github.com/aquasecurity/trivy/releases/download/v0.42.1/trivy_0.42.1_Linux-64bit.tar.gz
          tar zxvf trivy_0.42.1_Linux-64bit.tar.gz
          ls
          sudo mv trivy /usr/local/bin/

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '${{ github.repository }}:${{ github.sha }}'
          format: 'template'
          template: '@contrib/html.tpl'
          output: 'report.html'
          exit-code: '0'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
          timeout: '10m0s'
        continue-on-error: true

      - name: Run Trivy vulnerability scanner
        id: trivyjson
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '${{ github.repository }}:${{ github.sha }}'
          format: 'json'
          output: 'report.json'
          exit-code: '0'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
        continue-on-error: true

      - name: Convert JSON to Markdown
        id: trivymd
        run: |
          pip install BeautifulSoup4
          python3 .github/workflows/json2markdown.py VULNERABILITY
          echo 'TRIVYMD_OUTPUT<<EOF' >> $GITHUB_OUTPUT
          echo "$(cat report_VULNERABILITY.md)" >> $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT          

      - name: Comment PR
        uses: thollander/actions-comment-pull-request@v2
        with:
          message: |
            ### [Vulnerability report](https://www.google.com/)
            
            ${{ steps.trivymd.outputs.TRIVYMD_OUTPUT }}
