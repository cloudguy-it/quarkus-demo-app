name: CI
on:
  pull_request:
    types: [opened, synchronize]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Run Test and Coverage
        run: ./gradlew quarkusBuild test jacocoTestReport

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: artifacts
          path: .


  unittest_scan:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: artifacts
      - name: Convert UNITTEST to Markdown
        id: unittestmd
        run: |
          pip install BeautifulSoup4
          python3 .github/workflows/json2markdown.py UNITTEST
          echo 'UNITTESTMD_OUTPUT<<EOF' >> $GITHUB_OUTPUT
          echo "$(cat report_UNITTEST.md)" >> $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT

      - name: Find Unittest Comment if exist
        uses: peter-evans/find-comment@v2
        id: fc
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: Test Summary Report

      - name: Create or update Unittest comment
        uses: peter-evans/create-or-update-comment@v3
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ### Test Summary Report 
            ${{ steps.unittestmd.outputs.UNITTESTMD_OUTPUT }}
          edit-mode: replace

  jacoco_coverage_scan:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: artifacts
      - name: Jacoco Report to PR
        id: jacoco
        uses: madrapps/jacoco-report@v1.4
        with:
          paths: ./build/reports/jacoco/test/jacocoTestReport.xml
          token: ${{ secrets.GITHUB_TOKEN }}
          min-coverage-overall: 80
          min-coverage-changed-files: 80
          title: '[Code Coverage Report ${{ github.repository }}](https:///www.google.com)'
          debug-mode: false
          update-comment: true

  trivy_vulnerabilities_scan:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: artifacts
      - name: Build Docker Image
        run: docker build -f src/main/docker/Dockerfile.jvm -t ${{ github.repository }}:${{ github.sha }} .
      - name: Install Trivy
        run: |
          wget https://github.com/aquasecurity/trivy/releases/download/v0.42.1/trivy_0.42.1_Linux-64bit.tar.gz
          tar zxvf trivy_0.42.1_Linux-64bit.tar.gz
          ls
          sudo mv trivy /usr/local/bin/

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '${{ github.repository }}:${{ github.sha }}'
          format: 'template'
          template: '@contrib/html.tpl'
          output: 'report.html'
          exit-code: '0'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
          timeout: '10m0s'
        continue-on-error: true

      - name: Run Trivy vulnerability scanner
        id: trivyjson
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '${{ github.repository }}:${{ github.sha }}'
          format: 'json'
          output: 'report.json'
          exit-code: '0'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
        continue-on-error: true

      - name: Convert JSON to Markdown
        id: trivymd
        run: |
          pip install BeautifulSoup4
          python3 .github/workflows/json2markdown.py VULNERABILITY
          echo 'TRIVYMD_OUTPUT<<EOF' >> $GITHUB_OUTPUT
          echo "$(cat report_VULNERABILITY.md)" >> $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT

      - name: Find trivy Comment if exist
        uses: peter-evans/find-comment@v2
        id: fc
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: Trivy Vulnerability report

      - name: Create or update trivy comment
        uses: peter-evans/create-or-update-comment@v3
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ### [Trivy Vulnerability report](https://www.google.com/)
            
            ${{ steps.trivymd.outputs.TRIVYMD_OUTPUT }}
          edit-mode: replace



